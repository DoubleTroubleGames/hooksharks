[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/fonts/sigmar_one_regular.ttf" type="DynamicFontData" id=1]

[sub_resource type="DynamicFont" id=1]
size = 32
outline_size = 5
outline_color = Color( 0, 0, 0, 1 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 1 )

[sub_resource type="GDScript" id=2]
script/source = "extends Label

signal display_ended

func _ready():
	pass


# Called in AnimationPlayer
func display_ended():
	emit_signal(\"display_ended\")


func _on_AnimationPlayer_animation_finished(anim_name):
	queue_free()
"

[sub_resource type="Animation" id=3]
resource_name = "anim"
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1.1, 1.6 ),
"transitions": PoolRealArray( 0.5, 1, 0.5, 1 ),
"update": 0,
"values": [ Vector2( -400, 0 ), Vector2( -400, -40 ), Vector2( -400, -40 ), Vector2( -400, -80 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:modulate")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1.1, 1.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 1.1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "display_ended"
} ]
}

[node name="MessageLabel" type="Label"]
modulate = Color( 1, 1, 1, 0 )
margin_left = -400.0
margin_top = -80.0
margin_right = 400.0
grow_horizontal = 2
rect_min_size = Vector2( 800, 80 )
rect_pivot_offset = Vector2( 400, 40 )
custom_fonts/font = SubResource( 1 )
text = "Twenty-three is number one!"
align = 1
valign = 1
script = SubResource( 2 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "anim"
anims/anim = SubResource( 3 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
