[gd_scene load_steps=14 format=2]

[ext_resource path="res://objects/PullableObject.tscn" type="PackedScene" id=1]
[ext_resource path="res://objects/Powerups/Powerup.gd" type="Script" id=2]
[ext_resource path="res://assets/WaterDistortion.png" type="Texture" id=3]
[ext_resource path="res://assets/noise.png" type="Texture" id=4]
[ext_resource path="res://assets/barrel2_o.png" type="Texture" id=5]
[ext_resource path="res://assets/barrel2.png" type="Texture" id=6]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D noise;
uniform float wave_length : hint_range(0,1);
uniform vec4 wave_color : hint_color;
uniform vec2 wave_scroll_speed;
uniform sampler2D distortion;
uniform float distortion_strength;
uniform float aa_factor;

/*Making outline images on gimp: 
	- grow shape by 40 pixel
	- paint it white
	- use filter \"gaussian blur\" with values (100,100)
	- fine adjustments with Smudge Tool if needed
*/
void fragment(){
	vec4 pixel = texture(TEXTURE, UV);
	
	if (pixel.a < 1.0 && pixel.a > 0.0){
		
		vec2 distortMod = (texture(distortion, UV).xy * 2.0 - 1.0) * distortion_strength;
		float noise_x = mod(UV.x + wave_scroll_speed.x*TIME, 1.0) + distortMod.x;
		float noise_y = mod(UV.y + wave_scroll_speed.y*TIME, 1.0) + distortMod.y;
		vec2 noiseUV = vec2(noise_x, noise_y);
		vec4 noisePixel = texture(noise, noiseUV);

		float value = (noisePixel.r + noisePixel.g + noisePixel.g)/3.0;
		
		float cutoff = 1.0 - smoothstep(1.0 - wave_length, 1.0, pixel.a);
		
		if (value > cutoff - aa_factor) {
			float alpha = smoothstep(cutoff - aa_factor, cutoff + aa_factor, value);
			COLOR = vec4(wave_color.rgb, wave_color.a * alpha);
		}
		else
			COLOR = vec4(0);
	}else
		COLOR = pixel;
		
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/wave_length = 0.499
shader_param/wave_color = Color( 0.713726, 0.6, 0.145098, 1 )
shader_param/wave_scroll_speed = Vector2( 0.02, 0.01 )
shader_param/distortion_strength = 0.3
shader_param/aa_factor = 0.04
shader_param/noise = ExtResource( 4 )
shader_param/distortion = ExtResource( 3 )

[sub_resource type="Animation" id=3]
resource_name = "float"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 5 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../Hitbox:position")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 5 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=4]
resource_name = "spawn"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=5]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 5 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../Hitbox:position")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 5 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=6]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="CapsuleShape2D" id=7]
radius = 35.0

[node name="Powerup" index="0" groups=[
"powerup",
] instance=ExtResource( 1 )]
position = Vector2( 0, 5 )
script = ExtResource( 2 )

[node name="Sprite2" type="Sprite" parent="." index="0"]
material = SubResource( 2 )
position = Vector2( 0, 2.679 )
scale = Vector2( 0.75, 0.75 )
texture = ExtResource( 5 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Sprite2" index="0"]
autoplay = "float"
playback_speed = 0.5
anims/float = SubResource( 3 )
anims/spawn = SubResource( 4 )

[node name="Sprite" parent="." index="1"]
position = Vector2( 0, 2.67884 )
scale = Vector2( 0.75, 0.75 )
texture = ExtResource( 6 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Sprite" index="0"]
autoplay = "float"
playback_speed = 0.5
anims/float = SubResource( 5 )
anims/spawn = SubResource( 6 )

[node name="Hitbox" parent="." index="2"]
position = Vector2( 0, 2.67884 )

[node name="CollisionShape2D" parent="Hitbox" index="0"]
rotation = 1.5708
shape = SubResource( 7 )

[node name="RespawnTimer" type="Timer" parent="." index="3"]
wait_time = 2.0
one_shot = true

[connection signal="timeout" from="RespawnTimer" to="." method="spawn"]
